globalThis.openNextDebug = false;globalThis.openNextVersion = "3.3.0";
var E=Object.defineProperty;var m=(e,r)=>()=>(e&&(r=e(e=0)),r);var d=(e,r)=>{for(var t in r)E(e,t,{get:r[t],enumerable:!0})};function c(e){try{return"__openNextInternal"in e}catch{return!1}}var v=m(()=>{});function i(...e){globalThis.openNextDebug&&console.log(...e)}function L(...e){console.warn(...e)}function f(...e){if(e.some(r=>I(r)))i(...e);else if(e.some(r=>c(r))){let r=e.find(t=>c(t));return r.logLevel<O()?void 0:r.logLevel===0?console.log(...e.map(t=>c(t)?`${t.name}: ${t.message}`:t)):r.logLevel===1?L(...e.map(t=>c(t)?`${t.name}: ${t.message}`:t)):console.error(...e)}console.error(...e)}function O(){switch((process.env.OPEN_NEXT_ERROR_LOG_LEVEL??"1").toLowerCase()){case"debug":case"0":return 0;case"error":case"2":return 2;default:return 1}}var b,I,p=m(()=>{v();b=[{clientName:"S3Client",commandName:"GetObjectCommand",errorName:"NoSuchKey"}],I=e=>b.some(r=>r.clientName===e?.clientName&&r.commandName===e?.commandName&&(r.errorName===e?.error?.name||r.errorName===e?.error?.Code))});var x={};d(x,{default:()=>C});var R,C,_=m(()=>{R={convertFrom(e){let r=e.Records.map(t=>{let{host:o,url:n}=JSON.parse(t.body);return{host:o,url:n,id:t.messageId}});return Promise.resolve({type:"revalidate",records:r})},convertTo(e){return Promise.resolve({type:"revalidate",batchItemFailures:e.records.map(r=>({itemIdentifier:r.id}))})},name:"sqs-revalidate"},C=R});var y={};d(y,{default:()=>D});import{Writable as P}from"node:stream";function S(e){return new Promise(r=>{setTimeout(()=>{r({serverId,type:"warmer"})},e.delay)})}var T,D,h=m(()=>{T=async(e,r)=>async t=>{if("type"in t)return S(t);let o=await r.convertFrom(t),s=await e(o,{writeHeaders:()=>new P({write:(u,l,a)=>{a()}})});return r.convertTo(s,t)},D={wrapper:T,name:"aws-lambda",supportStreaming:!1}});import $ from"node:fs";import W from"node:https";import j from"node:path";p();async function w(e){return typeof e=="function"?e():(await Promise.resolve().then(()=>(_(),x))).default}async function g(e){return typeof e=="function"?e():(await Promise.resolve().then(()=>(h(),y))).default}async function N(e){let r=await import("./open-next.config.mjs").then(u=>u.default);globalThis.openNextConfig=r;let t=r[e.type]?.override,o=await w(t?.converter),{name:n,wrapper:s}=await g(t?.wrapper);return i("Using wrapper",n),s(e.handler,o)}p();var F=H(),G=async e=>{let r=[];for(let t of e.records){let{host:o,url:n}=t;i("Revalidating stale page",{host:o,url:n});try{await new Promise((s,u)=>{let l=W.request(`https://${o}${n}`,{method:"HEAD",headers:{"x-prerender-revalidate":F.preview.previewModeId,"x-isr":"1"}},a=>{i("revalidating",{url:n,host:o,headers:a.headers,statusCode:a.statusCode}),(a.statusCode!==200||a.headers["x-nextjs-cache"]!=="REVALIDATED")&&r.push(t),s(a)});l.on("error",a=>{f("Error revalidating page",{host:o,url:n}),u(a)}),l.end()})}catch{r.push(t)}}return r.length>0&&f(`Failed to revalidate ${r.length} pages`,{failedRecords:r}),{type:"revalidate",records:r}},ee=await N({handler:G,type:"revalidate"});function H(){let e=j.join("prerender-manifest.json"),r=$.readFileSync(e,"utf-8");return JSON.parse(r)}export{ee as handler};
